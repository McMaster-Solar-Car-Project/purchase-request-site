name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest
        
    - name: Install dependencies
      run: uv sync
      
    - name: Run ruff formatting check
      run: |
        echo "🔍 Checking code formatting with ruff..."
        uv run ruff check --fix .
        uv run ruff format --check .
        
    - name: Run ruff linting
      run: |
        echo "🔍 Running ruff linting..."
        uv run ruff check .
        
    - name: Build Docker image
      run: |
        echo "🔨 Building Docker image..."
        chmod +x build.sh
        ./build.sh
        
    - name: Test Docker container startup
      run: |
        echo "🧪 Testing Docker container startup..."
        
        # Start container in background with timeout
        timeout 30s docker run --name test-container --network host purchase-request-site &
        CONTAINER_PID=$!
        
        # Wait for startup
        sleep 15
        
        # Check if container is still running
        if docker ps | grep -q test-container; then
          echo "✅ Container started successfully!"
          
          # Check logs for database connection
          if docker logs test-container 2>&1 | grep -q "Database initialized successfully"; then
            echo "✅ Database connection successful!"
          else
            echo "⚠️  Database connection check failed, but container is running"
            docker logs test-container
          fi
          
          # Clean up
          docker stop test-container || true
          docker rm test-container || true
        else
          echo "❌ Container failed to start or stopped unexpectedly!"
          docker logs test-container || echo "No logs available"
          exit 1
        fi
        
    - name: Success message
      run: |
        echo "🎉 All checks passed!"
        echo "✅ Code formatting: OK"
        echo "✅ Linting: OK" 
        echo "✅ Docker build: OK"
        echo "✅ Container startup: OK" 